{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAOMC,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAkBH,SAASC,cAAc,kBACzCG,EAAcJ,SAASC,cAAc,eAErCI,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAChDC,eAAgB,GAChBC,aAAc,MACdC,aAAc,MAGZC,EAAQ,GACRC,EAAO,EACPC,EAAU,E,SAKCC,I,OAAAA,EAAfR,EAAAT,EAAA,CAAAS,EAAAS,GAAAC,MAAA,SAAAC,EAA4BC,G,qEAC1BA,EAAEC,iBAEFP,EAAO,EACPC,EAAU,EAEVF,EAAQP,EAAYgB,MAAMC,OAC1BnB,EAAQoB,UAAY,GAEpBnB,EAAgBoB,UAAUC,IAAI,aAEhB,KAAVb,EAAY,C,sBACdc,I,0BAGF,IACEC,G,CACA,MAAOC,GACPrB,EAAAsB,GAASC,OAAOC,QAAQ,+B,8CAlBDC,MAAAC,KAAAC,U,UAsBZP,I,OAAAQ,EAAgBH,MAAAC,KAAAC,U,UAAhBC,I,OAAAA,EAAf5B,EAAAT,EAAA,CAAAS,EAAAS,GAAAC,MAAA,SAAAC,I,IACQkB,EACAC,EACAC,E,mFAFiB,EAAAC,EAAAC,YAAW5B,EAAOC,EA3B3B,I,UA2BRuB,EAAQK,EAAAC,KACRL,EAAeD,EAASO,KACxBL,EAAYD,EAAaC,UAC/BxB,GAAWuB,EAAaO,KAAKC,OAEE,IAA3BR,EAAaC,UAAe,C,uBAC9BQ,I,2BAEkB,IAATjC,GACTkC,EAAmBV,G,QAGrBW,EAAcX,EAAaO,MAC3BtC,EAAS2C,UAGTpC,GAAQ,EACRqC,EAAGC,QAAQC,KAEPtC,IAAYwB,GACdlC,EAAgBoB,UAAU6B,OAAO,a,6CArBNrB,MAAAC,KAAAC,U,CAxB/BlC,EAAWsD,iBAAiB,U,SAEAnC,G,OAAbJ,EAAYiB,MAAAC,KAAAC,U,IA+C3B,IAAMgB,EAAK,IAAIK,sBAAqB,SAAAC,GAClCA,EAAQC,SAAQ,SAAAC,GACdC,QAAQC,IAAIF,GACPA,EAAMG,iBAGXT,IACAzB,I,OAIJ,SAASyB,IACP,OAAOnD,SAASC,cAAc,4B,CAGhC,SAAS8C,EAAcc,GACrB,IAAMC,EAAgBD,EACnBE,KACC,SAAAC,G,IACEC,EAAED,EAAFC,GACAC,EAAaF,EAAbE,cACAC,EAAYH,EAAZG,aACAC,EAAIJ,EAAJI,KACAC,EAAKL,EAALK,MACAC,EAAKN,EAALM,MACAC,EAAQP,EAARO,SACAC,EAASR,EAATQ,UAEA,MAAO,oDAEmCC,OADDP,EAAc,wDAE/BO,OADkBR,EAAG,sCACCQ,OAAtBN,EAAa,WAGFM,OAHWL,EAAK,yJAMhBK,OAHAJ,EAAM,4HAMHI,OAHHH,EAAM,+HAMFG,OAHDF,EAAS,gIAGEE,OAAVD,EAAU,iH,IAQpDE,KAAK,IAERxE,EAAQyE,mBAAmB,YAAab,E,CAG1C,SAAShB,EAAmBV,GAC1B9B,EAAAsB,GAASC,OAAO+C,QAAQ,oBAA2CH,OAAvBrC,EAAaC,UAAU,Y,CAGrE,SAASZ,IACPnB,EAAAsB,GAASC,OAAOC,QAAQ,8B,CAG1B,SAASe,IACPvC,EAAAsB,GAASC,OAAOC,QACd,6D","sources":["src/loadScroll.js"],"sourcesContent":["import './css/styles.css';\nimport { pixabayApi } from './js/serviseApi';\nimport Notiflix from 'notiflix';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst endOfSearchText = document.querySelector('.gallery__text');\nconst searchInput = document.querySelector('.input-form');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  overlayOpacity: 0.5,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet query = '';\nlet page = 1;\nlet loadImg = 0;\nconst perPage = 40;\n\nsearchForm.addEventListener('submit', onSearchForm);\n\nasync function onSearchForm(e) {\n  e.preventDefault();\n\n  page = 1;\n  loadImg = 0;\n  // query = e.currentTarget.searchQuery.value.trim();\n  query = searchInput.value.trim();\n  gallery.innerHTML = '';\n\n  endOfSearchText.classList.add('is-hidden');\n\n  if (query === '') {\n    alertEmptySearch();\n    return;\n  }\n  try {\n    createCollection();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nasync function createCollection() {\n  const response = await pixabayApi(query, page, perPage);\n  const responseData = response.data;\n  const totalHits = responseData.totalHits;\n  loadImg += responseData.hits.length;\n\n  if (responseData.totalHits === 0) {\n    alertNoImagesFound();\n    return;\n  } else if (page === 1) {\n    alertImagesToFound(responseData);\n  }\n\n  renderGallery(responseData.hits);\n  lightbox.refresh();\n  // const simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n\n  page += 1;\n  io.observe(getLastImgEl());\n\n  if (loadImg === totalHits) {\n    endOfSearchText.classList.remove('is-hidden');\n  }\n}\n\nconst io = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    console.log(entry);\n    if (!entry.isIntersecting) {\n      return;\n    }\n    getLastImgEl();\n    createCollection();\n  });\n});\n\nfunction getLastImgEl() {\n  return document.querySelector('.gallery__link:last-child');\n}\n\nfunction renderGallery(images) {\n  const galleryMarkup = images\n    .map(\n      ({\n        id,\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n    `;\n      }\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n}\n\nfunction alertImagesToFound(responseData) {\n  Notiflix.Notify.success(`Hooray! We found ${responseData.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n  Notiflix.Notify.failure('This field cannot be empty!');\n}\n\nfunction alertNoImagesFound() {\n  Notiflix.Notify.failure(\n    'No images were found for this request, try something else.'\n  );\n}\n"],"names":["$bpxeT","parcelRequire","$f09f59205a092477$var$searchForm","document","querySelector","$f09f59205a092477$var$gallery","$f09f59205a092477$var$endOfSearchText","$f09f59205a092477$var$searchInput","$f09f59205a092477$var$lightbox","$parcel$interopDefault","$5IjG7","overlayOpacity","captionsData","captionDelay","$f09f59205a092477$var$query","$f09f59205a092477$var$page","$f09f59205a092477$var$loadImg","$f09f59205a092477$var$_onSearchForm","$2TvXO","mark","_callee","e","preventDefault","value","trim","innerHTML","classList","add","$f09f59205a092477$var$alertEmptySearch","$f09f59205a092477$var$createCollection","error","$6JpON","Notify","failure","apply","this","arguments","$f09f59205a092477$var$_createCollection","response","responseData","totalHits","$9Q9lM","pixabayApi","_ctx","sent","data","hits","length","$f09f59205a092477$var$alertNoImagesFound","$f09f59205a092477$var$alertImagesToFound","$f09f59205a092477$var$renderGallery","refresh","$f09f59205a092477$var$io","observe","$f09f59205a092477$var$getLastImgEl","remove","addEventListener","IntersectionObserver","entries","forEach","entry","console","log","isIntersecting","images","galleryMarkup","map","param","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","concat","join","insertAdjacentHTML","success"],"version":3,"file":"loadScroll.e4820c60.js.map"}