{"mappings":"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","sources":["src/loadBtn.js"],"sourcesContent":["import './css/styles.css';\nimport { pixabayApi } from './js/serviseApi';\nimport Notiflix from 'notiflix';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\nconst endOfSearchText = document.querySelector('.gallery__text');\nconst searchInput = document.querySelector('.input-form');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  overlayOpacity: 0.5,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet query = '';\nlet page = 1;\nlet loadImg = 0;\nconst perPage = 40;\n\nsearchForm.addEventListener('submit', onSearchForm);\nloadMoreBtn.addEventListener('click', onLoadMoreBtn);\n\nasync function onSearchForm(e) {\n  e.preventDefault();\n\n  page = 1;\n  // query = e.currentTarget.searchQuery.value.trim();\n  query = searchInput.value.trim();\n  console.log(query);\n\n  gallery.innerHTML = '';\n\n  loadMoreBtn.classList.add('is-hidden');\n  endOfSearchText.classList.add('is-hidden');\n\n  if (query === '') {\n    alertEmptySearch();\n    return;\n  }\n\n  // pixabayApi(query, page, perPage)\n  //     .then(({data}) => {\n  //         if (data.totalHits === 0) {\n  //             alertNoImagesFound();\n  //         } else {\n  //             renderGallery(data.hits);\n  //             alertImagesToFound(data);\n  //             simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n  //         }\n\n  //         if (data.totalHits > perPage) {\n  //             loadMoreBtn.classList.remove('is-hidden');\n  //         }\n  //     }\n  // )\n  //     .catch(error => console.log(error));\n\n  try {\n    const response = await pixabayApi(query, page, perPage);\n    console.log(response);\n\n    const dataResponse = response.data;\n    console.log(dataResponse);\n\n    loadImg = dataResponse.hits.length;\n    console.log('first', loadImg);\n\n    if (dataResponse.totalHits === 0) {\n      alertNoImagesFound();\n    } else {\n      renderGallery(dataResponse.hits);\n      alertImagesToFound(dataResponse);\n      lightbox.refresh();\n\n      // const simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n    }\n\n    if (dataResponse.totalHits > perPage) {\n      loadMoreBtn.classList.remove('is-hidden');\n    }\n\n    onScroll();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nasync function onLoadMoreBtn() {\n  page += 1;\n\n  // pixabayApi(query, page, perPage)\n  //     .then(({ data }) => {\n  //         const totalPages = Math.ceil(data.totalHits / perPage);\n\n  //         if (page > totalPages) {\n  //             loadMoreBtn.classList.add('is-hidden');\n  //             alertEndOfSearch();\n  //         } else {\n  //             renderGallery(data.hits);\n  // lightbox.refresh();\n\n  //             simpleLightbox = new SimpleLightbox('.gallery a').refresh();\n  //         }\n\n  //     })\n  //     .catch(error => console.log(error));\n\n  try {\n    const response = await pixabayApi(query, page, perPage);\n    // const response = await pixabayApi.fetchPhotosByQuery();\n    const dataResponse = response.data;\n    // const totalPages = Math.ceil(dataResponse.totalHits / perPage);\n    const totalHits = dataResponse.totalHits;\n    loadImg += dataResponse.hits.length;\n    // console.log('second', loadImg)\n\n    renderGallery(dataResponse.hits);\n    lightbox.refresh();\n\n    // const simpleLightbox = new SimpleLightbox('.gallery a').refresh();\n\n    if (loadImg === totalHits) {\n      loadMoreBtn.classList.add('is-hidden');\n      endOfSearchText.classList.remove('is-hidden');\n    }\n\n    onScrollMore();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nfunction renderGallery(images) {\n  const galleryMarkup = images\n    .map(\n      ({\n        id,\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n      `;\n      }\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n}\n\nfunction alertImagesToFound(dataResponse) {\n  Notiflix.Notify.success(`Hooray! We found ${dataResponse.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n  Notiflix.Notify.failure('This field cannot be empty!');\n}\n\nfunction alertNoImagesFound() {\n  Notiflix.Notify.failure(\n    'No images were found for this request, try something else.'\n  );\n}\n\nfunction onScroll() {\n  window.scrollBy({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollMore() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$c81cf38e3a21e6fc$var$searchForm","document","querySelector","$c81cf38e3a21e6fc$var$gallery","$c81cf38e3a21e6fc$var$loadMoreBtn","$c81cf38e3a21e6fc$var$endOfSearchText","$c81cf38e3a21e6fc$var$searchInput","$c81cf38e3a21e6fc$var$lightbox","$parcel$interopDefault","$5IjG7","overlayOpacity","captionsData","captionDelay","$c81cf38e3a21e6fc$var$query","$c81cf38e3a21e6fc$var$page","$c81cf38e3a21e6fc$var$loadImg","$c81cf38e3a21e6fc$var$perPage","$c81cf38e3a21e6fc$var$_onSearchForm","$2TvXO","mark","_callee","e","response","dataResponse","preventDefault","value","trim","console","log","innerHTML","classList","add","$c81cf38e3a21e6fc$var$alertEmptySearch","$9Q9lM","pixabayApi","_ctx","sent","data","hits","length","totalHits","$c81cf38e3a21e6fc$var$alertNoImagesFound","$c81cf38e3a21e6fc$var$renderGallery","$c81cf38e3a21e6fc$var$alertImagesToFound","refresh","remove","$c81cf38e3a21e6fc$var$onScroll","$6JpON","Notify","failure","apply","this","arguments","$c81cf38e3a21e6fc$var$_onLoadMoreBtn","$c81cf38e3a21e6fc$var$onScrollMore","images","galleryMarkup","map","param","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","concat","join","insertAdjacentHTML","success","window","scrollBy","top","behavior","cardHeight","firstElementChild","getBoundingClientRect","height","addEventListener"],"version":3,"file":"loadBtn.573f034e.js.map"}