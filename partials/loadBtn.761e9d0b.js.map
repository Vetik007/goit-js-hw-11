{"mappings":"gkBAOA,MAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,QAASF,SAASC,cAAc,YAChCE,YAAaH,SAASC,cAAc,cACpCG,gBAAiBJ,SAASC,cAAc,kBACxCI,YAAaL,SAASC,cAAc,gBAGhCK,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAChDC,eAAgB,GAChBC,aAAc,MACdC,aAAc,MAGhB,IAAIC,EAAQ,GACRC,EAAO,EACPC,EAAU,EAoHd,SAASC,EAAcC,GACrB,MAAMC,EAAgBD,EACnBE,KACC,EAACC,GACCA,EAAEC,cACFA,EAAaC,aACbA,EAAYC,KACZA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,KAEO,oDACkCN,wDACCD,sCAClBE,WAAsBC,yJAGXC,4HAGAC,+HAGGC,gIAGCC,sHAQ1CC,KAAK,IAER7B,EAAKI,QAAQ0B,mBAAmB,YAAaX,E,CAvJ/CnB,EAAKC,WAAW8B,iBAAiB,UAGjCC,eAA4BC,GAa1B,GAZAA,EAAEC,iBAEFnB,EAAO,EAEPD,EAAQd,EAAKO,YAAY4B,MAAMC,OAC/BC,QAAQC,IAAIxB,GAEZd,EAAKI,QAAQmC,UAAY,GAEzBvC,EAAKK,YAAYmC,UAAUC,IAAI,aAC/BzC,EAAKM,gBAAgBkC,UAAUC,IAAI,aAErB,KAAV3B,EAEF,YA6IFL,EAAAiC,GAASC,OAAOC,QAAQ,+BAzHxB,IACE,MAAMC,QAAiB,EAAAC,EAAAC,YAAWjC,EAAOC,EAzC7B,IA0CZsB,QAAQC,IAAIO,GAEZ,MAAMG,EAAeH,EAASI,KAC9BZ,QAAQC,IAAIU,GAEZhC,EAAUgC,EAAaE,KAAKC,OAC5Bd,QAAQC,IAAI,QAAStB,GAEU,IAA3BgC,EAAaI,UAmHnB3C,EAAAiC,GAASC,OAAOC,QACd,+DAjHE3B,EAAc+B,EAAaE,MAuGjC,SAA4BF,GAC1BvC,EAAAiC,GAASC,OAAOU,QAAQ,oBAAoBL,EAAaI,oB,CAvGrDE,CAAmBN,GACnBxC,EAAS+C,WAKPP,EAAaI,UA5DL,IA6DVpD,EAAKK,YAAYmC,UAAUgB,OAAO,aA8GtCC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,U,CA5GV,MAAOC,GACPpD,EAAAiC,GAASC,OAAOC,QAAQ,+B,KA/D5B5C,EAAKK,YAAY0B,iBAAiB,SAmElCC,iBACEjB,GAAQ,EAmBR,IACE,MAEMiC,SAFiB,EAAAF,EAAAC,YAAWjC,EAAOC,EA3F7B,KA6FkBkC,KAExBG,EAAYJ,EAAaI,UAC/BpC,GAAWgC,EAAaE,KAAKC,OAG7BlC,EAAc+B,EAAaE,MAC3B1C,EAAS+C,UAILvC,IAAYoC,IACdpD,EAAKK,YAAYmC,UAAUC,IAAI,aAC/BzC,EAAKM,gBAAgBkC,UAAUgB,OAAO,cAuE5C,WACE,MAAQM,OAAQC,GAAe7D,SAC5BC,cAAc,YACd6D,kBAAkBC,wBAErBR,OAAOC,SAAS,CACdC,IAAkB,EAAbI,EACLH,SAAU,U,CA3EVM,E,CACA,MAAOL,GACPpD,EAAAiC,GAASC,OAAOC,QAAQ,+B","sources":["src/js/loadBtn.js"],"sourcesContent":["import '../css/styles.css';\nimport { pixabayApi } from './serviseApi';\nimport Notiflix from 'notiflix';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n  endOfSearchText: document.querySelector('.gallery__text'),\n  searchInput: document.querySelector('.input-form'),\n};\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  overlayOpacity: 0.5,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet query = '';\nlet page = 1;\nlet loadImg = 0;\nconst perPage = 40;\n\nrefs.searchForm.addEventListener('submit', onSearchForm);\nrefs.loadMoreBtn.addEventListener('click', onLoadMoreBtn);\n\nasync function onSearchForm(e) {\n  e.preventDefault();\n\n  page = 1;\n  // query = e.currentTarget.searchQuery.value.trim();\n  query = refs.searchInput.value.trim();\n  console.log(query);\n\n  refs.gallery.innerHTML = '';\n\n  refs.loadMoreBtn.classList.add('is-hidden');\n  refs.endOfSearchText.classList.add('is-hidden');\n\n  if (query === '') {\n    alertEmptySearch();\n    return;\n  }\n\n  // pixabayApi(query, page, perPage)\n  //     .then(({data}) => {\n  //         if (data.totalHits === 0) {\n  //             alertNoImagesFound();\n  //         } else {\n  //             renderGallery(data.hits);\n  //             alertImagesToFound(data);\n  //             simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n  //         }\n\n  //         if (data.totalHits > perPage) {\n  //             loadMoreBtn.classList.remove('is-hidden');\n  //         }\n  //     }\n  // )\n  //     .catch(error => console.log(error));\n\n  try {\n    const response = await pixabayApi(query, page, perPage);\n    console.log(response);\n\n    const dataResponse = response.data;\n    console.log(dataResponse);\n\n    loadImg = dataResponse.hits.length;\n    console.log('first', loadImg);\n\n    if (dataResponse.totalHits === 0) {\n      alertNoImagesFound();\n    } else {\n      renderGallery(dataResponse.hits);\n      alertImagesToFound(dataResponse);\n      lightbox.refresh();\n\n      // const simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n    }\n\n    if (dataResponse.totalHits > perPage) {\n      refs.loadMoreBtn.classList.remove('is-hidden');\n    }\n\n    onScroll();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nasync function onLoadMoreBtn() {\n  page += 1;\n\n  // pixabayApi(query, page, perPage)\n  //     .then(({ data }) => {\n  //         const totalPages = Math.ceil(data.totalHits / perPage);\n\n  //         if (page > totalPages) {\n  //             loadMoreBtn.classList.add('is-hidden');\n  //             alertEndOfSearch();\n  //         } else {\n  //             renderGallery(data.hits);\n  // lightbox.refresh();\n\n  //             simpleLightbox = new SimpleLightbox('.gallery a').refresh();\n  //         }\n\n  //     })\n  //     .catch(error => console.log(error));\n\n  try {\n    const response = await pixabayApi(query, page, perPage);\n    // const response = await pixabayApi.fetchPhotosByQuery();\n    const dataResponse = response.data;\n    // const totalPages = Math.ceil(dataResponse.totalHits / perPage);\n    const totalHits = dataResponse.totalHits;\n    loadImg += dataResponse.hits.length;\n    // console.log('second', loadImg)\n\n    renderGallery(dataResponse.hits);\n    lightbox.refresh();\n\n    // const simpleLightbox = new SimpleLightbox('.gallery a').refresh();\n\n    if (loadImg === totalHits) {\n      refs.loadMoreBtn.classList.add('is-hidden');\n      refs.endOfSearchText.classList.remove('is-hidden');\n    }\n\n    onScrollMore();\n  } catch (error) {\n    Notiflix.Notify.failure('Ooops...Something goes wrong');\n  }\n}\n\nfunction renderGallery(images) {\n  const galleryMarkup = images\n    .map(\n      ({\n        id,\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n      `;\n      }\n    )\n    .join('');\n\n  refs.gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n}\n\nfunction alertImagesToFound(dataResponse) {\n  Notiflix.Notify.success(`Hooray! We found ${dataResponse.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n  Notiflix.Notify.failure('This field cannot be empty!');\n}\n\nfunction alertNoImagesFound() {\n  Notiflix.Notify.failure(\n    'No images were found for this request, try something else.'\n  );\n}\n\nfunction onScroll() {\n  window.scrollBy({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollMore() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$48050566b44842b6$var$refs","searchForm","document","querySelector","gallery","loadMoreBtn","endOfSearchText","searchInput","$48050566b44842b6$var$lightbox","$parcel$interopDefault","$fZKcF","overlayOpacity","captionsData","captionDelay","$48050566b44842b6$var$query","$48050566b44842b6$var$page","$48050566b44842b6$var$loadImg","$48050566b44842b6$var$renderGallery","images","galleryMarkup","map","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","addEventListener","async","e","preventDefault","value","trim","console","log","innerHTML","classList","add","$7Y9D8","Notify","failure","response","$gAHok","pixabayApi","dataResponse","data","hits","length","totalHits","success","$48050566b44842b6$var$alertImagesToFound","refresh","remove","window","scrollBy","top","behavior","error","height","cardHeight","firstElementChild","getBoundingClientRect","$48050566b44842b6$var$onScrollMore"],"version":3,"file":"loadBtn.761e9d0b.js.map"}